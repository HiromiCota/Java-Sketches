
/** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *	Class:		Primes
 *	File:		PrimeNumbers.java
 *	Description:	Displays prime numbers, tests for primeness, prime
 *                       decomposition, and range of primes.
 *
 * @author:	Hiromi Cota Environment:	PC, Windows 10, jdk1.8.0_144, NetBeans 8.2
 * Date:	11/6/2017
 * @version	%1% %2%
 * @see javax.swing.JOptionPane
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 */
import java.awt.print.PrinterException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.*;

public class PrimeNumbers extends JFrame {

    // Class instance field
    private int whichRadio = 0;
    final int MAX_INPUT = 1000000;  // maximum number for prime test

    /**
     * Creates new form PrimeNumbers
     */
    public PrimeNumbers() {
        initComponents();
        //set as default the calculateJButton
        this.getRootPane().setDefaultButton(calculateJButton);
        //set as image the pi.pjg
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/PI.jpg"));
        //center the form
        this.setLocationRelativeTo(null);
        listAllJTextField.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choicebuttonGroup = new javax.swing.ButtonGroup();
        menubuttonGroup = new javax.swing.ButtonGroup();
        choiceJPanel = new javax.swing.JPanel();
        listAllJRadioButton = new javax.swing.JRadioButton();
        listAllJTextField = new javax.swing.JTextField();
        isPrimeJRadioButton = new javax.swing.JRadioButton();
        isPrimeJTextField = new javax.swing.JTextField();
        factorizationJRadioButton = new javax.swing.JRadioButton();
        factorizationJTextField = new javax.swing.JTextField();
        rangeJRadioButton = new javax.swing.JRadioButton();
        lowJTextField = new javax.swing.JTextField();
        fromJLabel = new javax.swing.JLabel();
        toJLabel = new javax.swing.JLabel();
        highJTextField = new javax.swing.JTextField();
        displayJPanel = new javax.swing.JPanel();
        displayJScrollPanel = new javax.swing.JScrollPane();
        displayTextArea = new javax.swing.JTextArea();
        controlPanel = new javax.swing.JPanel();
        calculateJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        printJButton = new javax.swing.JButton();
        QuitJButton = new javax.swing.JButton();
        primesJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        clearJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem = new javax.swing.JMenuItem();
        exitJMenuItem = new javax.swing.JMenuItem();
        actionJMenu = new javax.swing.JMenu();
        listPrimesJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        testForPrimeJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        primeFactorizationJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        rangeOfPrimesJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        helpJMenu = new javax.swing.JMenu();
        aboutrJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Prime Numbers");
        //set up image icon for JFrame
        Image imageJFrame = Toolkit.getDefaultToolkit().getImage("src/walker.jpg");
        //set image for JFrame
        setIconImage(imageJFrame);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        choiceJPanel.setBackground(new java.awt.Color(255, 204, 204));
        choiceJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Prime Number Action"));
        choiceJPanel.setMinimumSize(new java.awt.Dimension(270, 130));
        choiceJPanel.setPreferredSize(new java.awt.Dimension(290, 130));

        listAllJRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        choicebuttonGroup.add(listAllJRadioButton);
        listAllJRadioButton.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        listAllJRadioButton.setSelected(true);
        listAllJRadioButton.setText("How many prime numbers?");
        listAllJRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listAllJRadioButtonItemStateChanged(evt);
            }
        });
        listAllJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllJRadioButtonActionPerformed(evt);
            }
        });

        listAllJTextField.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        listAllJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllJTextFieldActionPerformed(evt);
            }
        });

        isPrimeJRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        choicebuttonGroup.add(isPrimeJRadioButton);
        isPrimeJRadioButton.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        isPrimeJRadioButton.setText("Is this a prime number?");
        isPrimeJRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isPrimeJRadioButtonItemStateChanged(evt);
            }
        });
        isPrimeJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPrimeJRadioButtonActionPerformed(evt);
            }
        });

        isPrimeJTextField.setEditable(false);
        isPrimeJTextField.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        isPrimeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPrimeJTextFieldActionPerformed(evt);
            }
        });

        factorizationJRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        choicebuttonGroup.add(factorizationJRadioButton);
        factorizationJRadioButton.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        factorizationJRadioButton.setText("Find prime factorization of?");
        factorizationJRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                factorizationJRadioButtonItemStateChanged(evt);
            }
        });
        factorizationJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorizationJRadioButtonActionPerformed(evt);
            }
        });

        factorizationJTextField.setEditable(false);
        factorizationJTextField.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        factorizationJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorizationJTextFieldActionPerformed(evt);
            }
        });

        rangeJRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        choicebuttonGroup.add(rangeJRadioButton);
        rangeJRadioButton.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        rangeJRadioButton.setText("Range of prime numbers");
        rangeJRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rangeJRadioButtonItemStateChanged(evt);
            }
        });
        rangeJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangeJRadioButtonActionPerformed(evt);
            }
        });

        lowJTextField.setEditable(false);
        lowJTextField.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        lowJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowJTextFieldActionPerformed(evt);
            }
        });

        fromJLabel.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        fromJLabel.setText("From");

        toJLabel.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        toJLabel.setText("To");

        highJTextField.setEditable(false);
        highJTextField.setFont(new java.awt.Font("MS Sans Serif", 0, 12)); // NOI18N
        highJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highJTextFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout choiceJPanelLayout = new org.jdesktop.layout.GroupLayout(choiceJPanel);
        choiceJPanel.setLayout(choiceJPanelLayout);
        choiceJPanelLayout.setHorizontalGroup(
            choiceJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(choiceJPanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(listAllJRadioButton)
                .add(1, 1, 1)
                .add(listAllJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(choiceJPanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(isPrimeJRadioButton)
                .add(23, 23, 23)
                .add(isPrimeJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(choiceJPanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(factorizationJRadioButton)
                .add(7, 7, 7)
                .add(factorizationJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(choiceJPanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(rangeJRadioButton))
            .add(choiceJPanelLayout.createSequentialGroup()
                .add(54, 54, 54)
                .add(fromJLabel)
                .add(1, 1, 1)
                .add(lowJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(20, 20, 20)
                .add(toJLabel)
                .add(6, 6, 6)
                .add(highJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        choiceJPanelLayout.setVerticalGroup(
            choiceJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(choiceJPanelLayout.createSequentialGroup()
                .add(10, 10, 10)
                .add(choiceJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(listAllJRadioButton)
                    .add(listAllJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(choiceJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(isPrimeJRadioButton)
                    .add(isPrimeJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(choiceJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(factorizationJRadioButton)
                    .add(factorizationJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(rangeJRadioButton)
                .add(5, 5, 5)
                .add(choiceJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(fromJLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lowJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(toJLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(highJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(choiceJPanel, java.awt.BorderLayout.WEST);

        displayJPanel.setBackground(new java.awt.Color(255, 204, 204));
        displayJPanel.setPreferredSize(new java.awt.Dimension(320, 190));

        displayTextArea.setEditable(false);
        displayTextArea.setFont(new java.awt.Font("MonoSpaced", 1, 12)); // NOI18N
        displayTextArea.setLineWrap(true);
        displayTextArea.setWrapStyleWord(true);
        displayJScrollPanel.setViewportView(displayTextArea);

        org.jdesktop.layout.GroupLayout displayJPanelLayout = new org.jdesktop.layout.GroupLayout(displayJPanel);
        displayJPanel.setLayout(displayJPanelLayout);
        displayJPanelLayout.setHorizontalGroup(
            displayJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(displayJPanelLayout.createSequentialGroup()
                .add(10, 10, 10)
                .add(displayJScrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 300, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        displayJPanelLayout.setVerticalGroup(
            displayJPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(displayJPanelLayout.createSequentialGroup()
                .add(10, 10, 10)
                .add(displayJScrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(displayJPanel, java.awt.BorderLayout.CENTER);

        controlPanel.setBackground(new java.awt.Color(255, 204, 204));
        controlPanel.setPreferredSize(new java.awt.Dimension(380, 35));
        controlPanel.setLayout(new java.awt.GridLayout(1, 4));

        calculateJButton.setBackground(new java.awt.Color(255, 255, 204));
        calculateJButton.setFont(new java.awt.Font("MS Sans Serif", 0, 14)); // NOI18N
        calculateJButton.setMnemonic('C');
        calculateJButton.setText("Calculate");
        calculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateJButtonActionPerformed(evt);
            }
        });
        controlPanel.add(calculateJButton);

        clearJButton.setBackground(new java.awt.Color(255, 255, 204));
        clearJButton.setFont(new java.awt.Font("MS Sans Serif", 0, 14)); // NOI18N
        clearJButton.setMnemonic('l');
        clearJButton.setText("Clear");
        clearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJButtonActionPerformed(evt);
            }
        });
        controlPanel.add(clearJButton);

        printJButton.setBackground(new java.awt.Color(255, 255, 204));
        printJButton.setFont(new java.awt.Font("MS Sans Serif", 0, 14)); // NOI18N
        printJButton.setMnemonic('P');
        printJButton.setText("Print");
        controlPanel.add(printJButton);

        QuitJButton.setBackground(new java.awt.Color(255, 255, 204));
        QuitJButton.setFont(new java.awt.Font("MS Sans Serif", 0, 14)); // NOI18N
        QuitJButton.setMnemonic('Q');
        QuitJButton.setText("Quit");
        QuitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitJButtonActionPerformed(evt);
            }
        });
        controlPanel.add(QuitJButton);

        getContentPane().add(controlPanel, java.awt.BorderLayout.SOUTH);

        fileJMenu.setMnemonic('F');
        fileJMenu.setText("File");

        clearJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        clearJMenuItem.setMnemonic('C');
        clearJMenuItem.setText("Clear");
        fileJMenu.add(clearJMenuItem);

        printJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print");
        fileJMenu.add(printJMenuItem);

        exitJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        exitJMenuItem.setMnemonic('x');
        exitJMenuItem.setText("Exit");
        fileJMenu.add(exitJMenuItem);

        primesJMenuBar.add(fileJMenu);

        actionJMenu.setMnemonic('A');
        actionJMenu.setText("Action");

        menubuttonGroup.add(listPrimesJRadioButtonMenuItem);
        listPrimesJRadioButtonMenuItem.setMnemonic('L');
        listPrimesJRadioButtonMenuItem.setSelected(true);
        listPrimesJRadioButtonMenuItem.setText("List Primes");
        listPrimesJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPrimesJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        actionJMenu.add(listPrimesJRadioButtonMenuItem);

        menubuttonGroup.add(testForPrimeJRadioButtonMenuItem);
        testForPrimeJRadioButtonMenuItem.setMnemonic('T');
        testForPrimeJRadioButtonMenuItem.setText("Test for Primes");
        testForPrimeJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testForPrimeJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        actionJMenu.add(testForPrimeJRadioButtonMenuItem);

        menubuttonGroup.add(primeFactorizationJRadioButtonMenuItem);
        primeFactorizationJRadioButtonMenuItem.setMnemonic('F');
        primeFactorizationJRadioButtonMenuItem.setText("Primes Factorization");
        primeFactorizationJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeFactorizationJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        actionJMenu.add(primeFactorizationJRadioButtonMenuItem);

        menubuttonGroup.add(rangeOfPrimesJRadioButtonMenuItem);
        rangeOfPrimesJRadioButtonMenuItem.setMnemonic('R');
        rangeOfPrimesJRadioButtonMenuItem.setText("Range of Primes");
        rangeOfPrimesJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangeOfPrimesJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        actionJMenu.add(rangeOfPrimesJRadioButtonMenuItem);

        primesJMenuBar.add(actionJMenu);

        helpJMenu.setMnemonic('H');
        helpJMenu.setText("Help");

        aboutrJMenuItem.setMnemonic('A');
        aboutrJMenuItem.setText("About");
        helpJMenu.add(aboutrJMenuItem);

        primesJMenuBar.add(helpJMenu);

        setJMenuBar(primesJMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lowJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowJTextFieldActionPerformed
        // Call calculateJButtonActionPerformed
        calculateJButtonActionPerformed(evt);
    }//GEN-LAST:event_lowJTextFieldActionPerformed

    private void highJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highJTextFieldActionPerformed
        // Call calculateJButtonActionPerformed
        calculateJButtonActionPerformed(evt);
    }//GEN-LAST:event_highJTextFieldActionPerformed

    private void factorizationJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorizationJTextFieldActionPerformed
        // Call calculateJButtonActionPerformed
        calculateJButtonActionPerformed(evt);
    }//GEN-LAST:event_factorizationJTextFieldActionPerformed

    private void isPrimeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPrimeJTextFieldActionPerformed
        // Call calculateJButtonActionPerformed
        calculateJButtonActionPerformed(evt);
    }//GEN-LAST:event_isPrimeJTextFieldActionPerformed

    private void listAllJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllJTextFieldActionPerformed
        // Call calculateJButtonActionPerformed
        calculateJButtonActionPerformed(evt);
    }//GEN-LAST:event_listAllJTextFieldActionPerformed

    private void calculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateJButtonActionPerformed
        // Find primes for each selection
        displayTextArea.setText("");    // clear display area
        whichRadio = getButton();  // decide which radio button is selected
        switch (whichRadio) {
            case 1:
                listPrimes();
                break;
            case 2:
                if (isPrime(Integer.valueOf(isPrimeJTextField.getText()))) {
                    outputIsPrime(true, Integer.valueOf(isPrimeJTextField.getText()));
                } else {
                    outputIsPrime(false, Integer.valueOf(isPrimeJTextField.getText()));
                }

                break;
            case 3:
                primeFactors();
                break;
            case 4:
                range();
            default: // 5 is a valid return from whichButton, but means nothing.
                break;
        }
    }//GEN-LAST:event_calculateJButtonActionPerformed

    private Boolean isPrime(int testVal) {
        boolean isPrime = true;
        if (testVal > 3) //There's no need to test 1-3
        {
            for (int i = 2; i <= Math.sqrt(testVal) && isPrime == true; i++) {
                int remain = testVal % i;
                System.out.println(testVal + "%" + i + "=" + remain);
                if (testVal % i == 0) {

                    isPrime = false;
                }
            }
        } else if (testVal <= 0) {
            return !isPrime; //Negatives are not prime.
        }
        return isPrime;
    }

    private void outputIsPrime(Boolean isPrime, int number) {
        displayTextArea.setText(number + " is ");
        if (isPrime == false) {
            displayTextArea.append("NOT ");
        }
        displayTextArea.append("prime!");
    }

    private void primeFactors() {

    }

    private void range() {

    }

    // listPrimes();
    // display the first n prime numbers
    private void listPrimes() {
        String message = "Illegal type--inter an integer >= 1 and < "
                + MAX_INPUT;
        try {
            int max = Integer.parseInt(listAllJTextField.getText());
            if (max < 0 || max > MAX_INPUT) {
                message = "Illegal range--Enter an integer >=1 and < " + MAX_INPUT;
                throw new NumberFormatException();
            }
            int[] primes = new int[max];
            int primeCount = 1;
            int test = 3;
            StringBuffer output = new StringBuffer("The first " + max + " integers are:\n\n2\t");
            while (primeCount < max) {
                if (isPrime(test)) {
                    primes[primeCount] = test;
                    output.append(test);
                    output.append("\t");
                    primeCount++;
                }
                test += 2;
            }

            displayTextArea.setText(output.toString());
        } catch (NumberFormatException numexp) {
            // display error message
            JOptionPane.showMessageDialog(null,
                    message, "Illegal Input", JOptionPane.WARNING_MESSAGE);
            listAllJTextField.requestFocus();
            listAllJTextField.selectAll();
        }
    }

    // method to return integer for which radio button is selected
    private int getButton() {
        if (listAllJRadioButton.isSelected()) {
            return 1;       // first radio button selected
        } else if (isPrimeJRadioButton.isSelected()) {
            return 2;       // second radio button selected
        } else if (factorizationJRadioButton.isSelected()) {
            return 3;       // third radio button selected
        } else if (rangeJRadioButton.isSelected()) {
            return 4;       // fourth radio button selected
        } else {
            return 5;
        }
    }
    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJButtonActionPerformed
        // Clear all, set focus on listAllJRadioButton
        listAllJRadioButton.setSelected(true);
        displayTextArea.setText("");
    }//GEN-LAST:event_clearJButtonActionPerformed

    private void rangeJRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rangeJRadioButtonItemStateChanged
        // Enable corresponding text field
        if (rangeJRadioButton.isSelected()) {
            whichRadio = 4;
            lowJTextField.setEditable(true);
            highJTextField.setEditable(true);
            lowJTextField.requestFocus();
        } else {
            lowJTextField.setText("");
            highJTextField.setText("");
            lowJTextField.setEditable(false);
            highJTextField.setEditable(false);
            displayTextArea.setText("");
        }
    }//GEN-LAST:event_rangeJRadioButtonItemStateChanged

    private void factorizationJRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_factorizationJRadioButtonItemStateChanged
        // Enable corresponding text field
        if (factorizationJRadioButton.isSelected()) {
            whichRadio = 3;
            factorizationJTextField.setEditable(true);
            factorizationJTextField.requestFocus();
        } else {
            factorizationJTextField.setText("");
            factorizationJTextField.setEditable(false);
            displayTextArea.setText("");
        }
    }//GEN-LAST:event_factorizationJRadioButtonItemStateChanged

    private void isPrimeJRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isPrimeJRadioButtonItemStateChanged
        // Enable corresponding text field
        if (isPrimeJRadioButton.isSelected()) {
            whichRadio = 2;
            isPrimeJTextField.setEditable(true);
            isPrimeJTextField.requestFocus();
        } else {
            isPrimeJTextField.setText("");
            isPrimeJTextField.setEditable(false);
            displayTextArea.setText("");
        }
    }//GEN-LAST:event_isPrimeJRadioButtonItemStateChanged

    private void listAllJRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listAllJRadioButtonItemStateChanged
        // Enable corresponding text field
        if (listAllJRadioButton.isSelected()) {
            whichRadio = 1;
            listAllJTextField.setEditable(true);
            listAllJTextField.requestFocus();
        } else {
            listAllJTextField.setText("");
            listAllJTextField.setEditable(false);
            displayTextArea.setText("");
        }
    }//GEN-LAST:event_listAllJRadioButtonItemStateChanged

    private void QuitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitJButtonActionPerformed
        // Quit the program
        System.exit(0);
    }//GEN-LAST:event_QuitJButtonActionPerformed

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void listAllJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllJRadioButtonActionPerformed

        // Select the corresponding menu choice
        listPrimesJRadioButtonMenuItem.setSelected(true);
    }//GEN-LAST:event_listAllJRadioButtonActionPerformed

    private void isPrimeJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPrimeJRadioButtonActionPerformed
        // Select the corresponding menu choice
        testForPrimeJRadioButtonMenuItem.setSelected(true);
    }//GEN-LAST:event_isPrimeJRadioButtonActionPerformed

    private void factorizationJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorizationJRadioButtonActionPerformed
        // Select the corresponding menu choice
        primeFactorizationJRadioButtonMenuItem.setSelected(true);
    }//GEN-LAST:event_factorizationJRadioButtonActionPerformed

    private void rangeJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangeJRadioButtonActionPerformed
        // Select the corresponding menu choice
        rangeOfPrimesJRadioButtonMenuItem.setSelected(true);
    }//GEN-LAST:event_rangeJRadioButtonActionPerformed

    private void listPrimesJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPrimesJRadioButtonMenuItemActionPerformed
        // Select the corresponding radio button
        isPrimeJRadioButton.setSelected(true);
    }//GEN-LAST:event_listPrimesJRadioButtonMenuItemActionPerformed

    private void testForPrimeJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testForPrimeJRadioButtonMenuItemActionPerformed
        /// Select the corresponding radio button
        isPrimeJRadioButton.setSelected(true);
    }//GEN-LAST:event_testForPrimeJRadioButtonMenuItemActionPerformed

    private void primeFactorizationJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeFactorizationJRadioButtonMenuItemActionPerformed
        // Select the corresponding radio button
        factorizationJRadioButton.setSelected(true);
    }//GEN-LAST:event_primeFactorizationJRadioButtonMenuItemActionPerformed

    private void rangeOfPrimesJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangeOfPrimesJRadioButtonMenuItemActionPerformed
        // Select the corresponding radio button
        rangeJRadioButton.setSelected(true);
    }//GEN-LAST:event_rangeOfPrimesJRadioButtonMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // Show main form centered
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        PrimeNumbers myPrimes = new PrimeNumbers();
        int x = (screen.width - myPrimes.getWidth()) / 2;
        int y = (screen.height - myPrimes.getHeight()) / 2;
        myPrimes.setBounds(x, y, myPrimes.getWidth(), myPrimes.getHeight());

        myPrimes.setVisible(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton QuitJButton;
    private javax.swing.JMenuItem aboutrJMenuItem;
    private javax.swing.JMenu actionJMenu;
    private javax.swing.JButton calculateJButton;
    private javax.swing.JPanel choiceJPanel;
    private javax.swing.ButtonGroup choicebuttonGroup;
    private javax.swing.JButton clearJButton;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JScrollPane displayJScrollPanel;
    private javax.swing.JTextArea displayTextArea;
    private javax.swing.JMenuItem exitJMenuItem;
    private javax.swing.JRadioButton factorizationJRadioButton;
    private javax.swing.JTextField factorizationJTextField;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JLabel fromJLabel;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JTextField highJTextField;
    private javax.swing.JRadioButton isPrimeJRadioButton;
    private javax.swing.JTextField isPrimeJTextField;
    private javax.swing.JRadioButton listAllJRadioButton;
    private javax.swing.JTextField listAllJTextField;
    private javax.swing.JRadioButtonMenuItem listPrimesJRadioButtonMenuItem;
    private javax.swing.JTextField lowJTextField;
    private javax.swing.ButtonGroup menubuttonGroup;
    private javax.swing.JRadioButtonMenuItem primeFactorizationJRadioButtonMenuItem;
    private javax.swing.JMenuBar primesJMenuBar;
    private javax.swing.JButton printJButton;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JRadioButton rangeJRadioButton;
    private javax.swing.JRadioButtonMenuItem rangeOfPrimesJRadioButtonMenuItem;
    private javax.swing.JRadioButtonMenuItem testForPrimeJRadioButtonMenuItem;
    private javax.swing.JLabel toJLabel;
    // End of variables declaration//GEN-END:variables

}
